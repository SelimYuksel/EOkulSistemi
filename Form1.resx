<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>